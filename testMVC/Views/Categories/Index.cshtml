@model TestMVC.ViewModels.PaginationCategoryViewModel
@{
    ViewData["Title"] = "Categories Page";
}

@if (this.User.IsInRole("Admin"))
{
    <form method="get" asp-controller="Categories" asp-action="Create">
        <input class="btn btn-success" type="submit" value="Create new category" />
    </form>
}

<div class="container-fluid">
    <div class="row">
        <div class="col-5">
            @await Html.PartialAsync("_SortPartialView.cshtml")
        </div>
    </div>
    <div class="row">
        @for (int i = 0; i < @Model.CategoryList.Count(); i++)
        {
            <div class="col-lg-5 col-xl-4">
                @await Html.PartialAsync("_CategoryPartialView.cshtml", Model.CategoryList.ToArray()[i])
            </div>
        }
    </div>
    @{int nextPage = Model.CurrentPage + 1;}
    @{int previousPage = Model.CurrentPage - 1;}
    <div class="row">
        <div class="col">
            <ul class="pagination justify-content-center">
                @if (Model.HasPrevious)
                {
                    <li class="page-item"><a class="page-link" asp-controller="Categories" asp-action="Index" asp-route-page=@previousPage>Previous</a></li>
                }
                @if (Model.HasNext)
                {
                    <li class="page-item"><a class="page-link" asp-controller="Categories" asp-action="Index" asp-route-page=@nextPage>Next</a></li>
                }
            </ul>
        </div>
    </div>
</div>